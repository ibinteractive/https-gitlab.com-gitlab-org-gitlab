export const builds = [
  {
    stage_idx: 1,
    stage: 'test',
    tag_list: ['ruby', 'postgres'],
    name: 'rspec',
    allow_failure: false,
    when: 'on_success',
    yaml_variables: [{ key: 'DB_NAME', value: 'postgres', public: true }],
    only: { refs: ['branches'] },
    scheduling_type: 'stage',
    options: {
      image: { name: 'ruby:2.6' },
      services: [{ name: 'postgres' }],
      before_script: ['bundle install', 'bundle exec rake db:create'],
      script: ['rake spec'],
      after_script: ['echo it worked'],
    },
  },
  {
    stage_idx: 1,
    stage: 'test',
    tag_list: ['ruby', 'mysql'],
    name: 'spinach',
    allow_failure: true,
    when: 'on_success',
    yaml_variables: [{ key: 'DB_NAME', value: 'postgres', public: true }],
    only: { refs: ['branches', 'tags'] },
    except: { refs: ['tags'] },
    scheduling_type: 'stage',
    options: {
      image: { name: 'ruby:2.6' },
      services: [{ name: 'postgres' }],
      before_script: ['bundle install', 'bundle exec rake db:create'],
      script: ['rake spinach'],
      after_script: ['echo it worked'],
    },
  },
  {
    stage_idx: 2,
    stage: 'deploy',
    tag_list: ['ruby', 'mysql'],
    name: 'staging',
    allow_failure: false,
    when: 'on_success',
    yaml_variables: [
      { key: 'DB_NAME', value: 'postgres', public: true },
      { key: 'KEY1', value: 'value1', public: true },
      { key: 'KEY2', value: 'value2', public: true },
    ],
    only: { refs: ['branches', 'tags'] },
    except: { refs: ['stable'] },
    scheduling_type: 'stage',
    options: {
      image: { name: 'ruby:2.6' },
      services: [{ name: 'postgres' }],
      before_script: ['bundle install', 'bundle exec rake db:create'],
      script: ['cap deploy stating'],
      after_script: ['echo it worked'],
    },
  },
  {
    stage_idx: 2,
    stage: 'deploy',
    tag_list: ['ruby', 'mysql'],
    name: 'production',
    allow_failure: false,
    when: 'on_success',
    yaml_variables: [{ key: 'DB_NAME', value: 'mysql', public: true }],
    only: { refs: ['master', '/^deploy-.*$/'] },
    scheduling_type: 'stage',
    options: {
      image: { name: 'ruby:2.6' },
      services: [{ name: 'postgres' }],
      before_script: ['bundle install', 'bundle exec rake db:create'],
      script: ['cap deploy production', 'cap notify'],
      after_script: ['echo it worked'],
    },
  },
  {
    stage_idx: 3,
    stage: 'notify',
    tag_list: ['ruby', 'postgres'],
    name: 'dockerhub',
    allow_failure: false,
    when: 'on_success',
    yaml_variables: [{ key: 'DB_NAME', value: 'postgres', public: true }],
    only: { refs: ['branches'] },
    scheduling_type: 'stage',
    options: {
      image: { name: 'ruby:2.6' },
      services: [{ name: 'postgres' }],
      before_script: ['bundle install', 'bundle exec rake db:create'],
      script: ['curl http://dockerhub/URL'],
      after_script: ['echo it worked'],
    },
  },
];

export const jobs = {
  rspec: {
    name: 'rspec',
    stage: 'test',
    variables: { DB_NAME: 'postgres' },
    only: { refs: ['branches'] },
    before_script: ['bundle install', 'bundle exec rake db:create'],
    script: ['rake spec'],
    after_script: ['echo it worked'],
    image: { name: 'ruby:2.6' },
    services: [{ name: 'postgres' }],
    tags: ['ruby', 'postgres'],
    ignore: false,
    scheduling_type: 'stage',
  },
  spinach: {
    name: 'spinach',
    stage: 'test',
    variables: { DB_NAME: 'postgres' },
    only: { refs: ['branches', 'tags'] },
    except: { refs: ['tags'] },
    before_script: ['bundle install', 'bundle exec rake db:create'],
    after_script: ['echo it worked'],
    script: ['rake spinach'],
    image: { name: 'ruby:2.6' },
    services: [{ name: 'postgres' }],
    tags: ['ruby', 'mysql'],
    ignore: true,
    scheduling_type: 'stage',
  },
  staging: {
    name: 'staging',
    stage: 'deploy',
    variables: { DB_NAME: 'postgres', KEY1: 'value1', KEY2: 'value2' },
    only: { refs: ['branches', 'tags'] },
    except: { refs: ['stable'] },
    before_script: ['bundle install', 'bundle exec rake db:create'],
    after_script: ['echo it worked'],
    script: ['cap deploy stating'],
    image: { name: 'ruby:2.6' },
    services: [{ name: 'postgres' }],
    tags: ['ruby', 'mysql'],
    ignore: false,
    scheduling_type: 'stage',
  },
  production: {
    name: 'production',
    stage: 'deploy',
    variables: { DB_NAME: 'mysql' },
    only: { refs: ['master', '/^deploy-.*$/'] },
    before_script: ['bundle install', 'bundle exec rake db:create'],
    after_script: ['echo it worked'],
    script: ['cap deploy production', 'cap notify'],
    image: { name: 'ruby:2.6' },
    services: [{ name: 'postgres' }],
    tags: ['ruby', 'mysql'],
    ignore: false,
    scheduling_type: 'stage',
  },
  dockerhub: {
    name: 'dockerhub',
    stage: 'notify',
    variables: { DB_NAME: 'postgres' },
    only: { refs: ['branches'] },
    before_script: ['bundle install', 'bundle exec rake db:create'],
    after_script: ['echo it worked'],
    script: ['curl http://dockerhub/URL'],
    image: { name: 'ruby:2.6' },
    services: [{ name: 'postgres' }],
    tags: ['ruby', 'postgres'],
    ignore: false,
    scheduling_type: 'stage',
  },
};

export const errors = [
  'jobs:rspec:tags config should be an array of strings',
  'jobs:spinach:tags config should be an array of strings',
];
