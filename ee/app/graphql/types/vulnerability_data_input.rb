# frozen_string_literal: true

module Types
  # rubocop: disable Graphql/AuthorizeTypes
  class VulnerabilityDataInput < BaseInputObject
    argument :timestamp, type: GraphQL::INT_TYPE, required: false,
    description: ""
    argument :create_issue_url, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :has_mr, type: GraphQL::BOOLEAN_TYPE, required: false,
    description: ""
    argument :create_mr_url, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :discussions_url, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :notes_url, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :vulnerability_feedback_help_path, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :related_issues_help_path, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :pipeline, type: Types::PipelineInput, required: false,
    description: ""
    argument :can_modify_related_issues, type: GraphQL::BOOLEAN_TYPE, required: false,
    description: ""
    argument :issue_tracking_help_path, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :permissions_help_path, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :id, type: GraphQL::INT_TYPE, required: false,
    description: ""
    argument :title, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :state, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :severity, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :confidence, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :report_type, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :resolved_on_default_branch, type: GraphQL::BOOLEAN_TYPE, required: false,
    description: ""
    argument :project_default_branch, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :resolved_at, type: Types::TimeType, required: false,
    description: ""
    argument :resolved_by_id, type: GraphQL::INT_TYPE, required: false,
    description: ""
    argument :dismissed_at, type: Types::TimeType, required: false,
    description: ""
    argument :dismissed_by_id, type: GraphQL::INT_TYPE, required: false,
    description: ""
    argument :confirmed_at, type: Types::TimeType, required: false,
    description: ""
    argument :confirmed_by_id, type: GraphQL::INT_TYPE, required: false,
    description: ""
    argument :description, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :identifiers, type: [Types::IdentifierInput], required: false,
    description: ""
    argument :links, type: [Types::LinkInput], required: false,
    description: ""
    argument :location, type: Types::LocationInput, required: false,
    description: ""
    argument :name, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :project, type: Types::ProjectInput, required: false,
    description: ""
    argument :project_fingerprint, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :remediations, type: [Types::RemediationInput], required: false,
    description: ""
    argument :scanner, type: Types::ScannerInput, required: false,
    description: ""
    argument :solution, type: GraphQL::STRING_TYPE, required: false,
    description: ""
    argument :category, type: GraphQL::STRING_TYPE, required: false,
    description: ""
  end
  # rubocop: enable Graphql/AuthorizeTypes
end
